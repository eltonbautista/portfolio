---
// Components
import QuoteAndMedia from "../QuoteAndMedia.astro";
import PersonalDisplays from "../PersonalDisplays.jsx";
import Carousel from "../Carousel.jsx";

// Media
import clipOne from "../../../public/powerlifter.mp4";
import clipTwo from "../../../public/hiker.mp4";
import { allMyText } from "../../utils";
export interface IIntroductionProps {
  firstName: string;
  lastName: string;
  roleMain: string;
  roleSub: string;
}
const { firstName, lastName, roleMain, roleSub } = Astro.props;
let test = [1, 2, 3];
---

<section class="section-container section-name">
  <div class="container-name">
    <span class="name one">{firstName}</span>
    <span class="name two">{lastName}</span>
    <span class="role one">
      <span>f</span>
      <span>r</span>
      <span>o</span>
      <span>n</span>
      <span>t</span>
      <span>e</span>
      <span>n</span>
      <span>d</span>
    </span>
    <!-- <span class="role two">{roleSub}</span> -->
    <span class="role two">
      <span>d</span>
      <span>e</span>
      <span>v</span>
      <span>e</span>
      <span>l</span>
      <span>o</span>
      <span>p</span>
      <span>e</span>
      <span>r</span>
    </span>

    <span class="fake-border"></span>
  </div>
  <QuoteAndMedia quote={allMyText.quoteOne} />
  <Carousel client:only displays={test} />
</section>

<style>
  section {
    display: grid;
    justify-items: center;
    max-width: 100%;
    position: relative;
  }

  .container-name {
    display: grid;
    justify-items: start;
    justify-self: start;
    text-align: center;
    transform-style: preserve-3d;
    transform: rotateX(50deg);
    animation: separateName 2s 1 ease-in-out 0.5s alternate both;
    padding: 0 0 1.3em 0;
    width: 72vw;
  }

  @keyframes separateName {
    0% {
      transform: rotateX(90deg);
    }

    100% {
      transform: rotateX(50deg);
    }
  }

  @keyframes glitchName {
    0% {
      font-style: italic;
      font-family: HintRetro, JostMedium;
      line-height: 1.3;
    }

    15% {
      text-decoration: line-through;
      text-transform: lowercase;
    }

    30% {
      text-decoration: wavy;
      /* color: var(--bg-color-lighter-sub); */
      color: blue;
    }

    65% {
      text-decoration: underline;
      text-transform: capitalize;
    }

    80% {
      text-decoration-style: solid;
      font-style: italic;
      text-transform: uppercase;
    }

    100% {
      font-family: FightingSpirit, JostLight, sans-serif;
      text-transform: uppercase;
      /* font-weight: 100; */
      line-height: 1.3;

    }
  }

  @keyframes secondGlitchName {
    0% {
      text-transform: lowercase;
      line-height: 1.08;
      opacity: 0;
    }

    15% {
      text-transform: lowercase;
    }

    30% {
      text-decoration: underline;
      text-transform: capitalize;
    }

    65% {
      text-decoration: wavy;
      color: var(bg-color-sub);
      font-style: italic;
      /* text-decoration: line-through; */
    }

    80% {
      text-decoration-style: solid;
      font-style: italic;
      text-transform: uppercase;
    }

    100% {
      line-height: 1.08;
      /* text-transform: uppercase; */
      /* color: var(--bg-color-lighter-sub); */
      /* color: blue; */
      opacity: 1;
    }
  }

  .container-name>span {
    text-align: center;
    font-size: calc(5em + var(--font-size-xl));
    line-height: 1.08;
    transform: rotateX(310deg) rotateY(0deg) skewY(-0.5deg);
  }

  @media (max-width: 1300px) {
    .container-name>span {
      font-size: calc(2em + var(--font-size-xl));
    }
  }

  @media (max-width: 600px) {
    .container-name>span {
      font-size: calc(1em + var(--font-size-xl));
    }
  }

  @media (max-width: 400px) {
    .container-name>span {
      font-size: calc(var(--font-size-xl));
    }
  }

  @media (max-width: 300px) {
    .container-name>span {
      font-size: calc(1em + var(--font-size-lg));
    }

  }


  .name.one {
    color: var(--bg-color-sub);
  }

  .name.two {
    padding-left: 0.4em;
    color: blue;
  }

  .name {
    animation: glitchName 0.8s 3 ease-in-out 2.4s alternate both;
    letter-spacing: 0.1em;
  }

  .role.one {
    padding-left: 0.6em;
  }

  /* Role One Animations */

  .role.one>span:nth-child(1) {
    animation: hideLetter 0.2s 1 5s alternate both;
  }

  .role.one>span:nth-child(2) {
    animation: hideLetter 0.2s 1 5.2s alternate both;
  }

  .role.one>span:nth-child(3) {
    animation: hideLetter 0.2s 1 5.4s alternate both;
  }

  .role.one>span:nth-child(4) {
    animation: hideLetter 0.2s 1 5.6s alternate both;
  }

  .role.one>span:nth-child(5) {
    animation: hideLetter 0.2s 1 5.8s alternate both;
  }

  .role.one>span:nth-child(6) {
    animation: hideLetter 0.2s 1 6s alternate both;
  }

  .role.one>span:nth-child(7) {
    animation: hideLetter 0.2s 1 6.2s alternate both;
  }

  .role.one>span:nth-child(8) {
    animation: hideLetter 0.2s 1 6.4s alternate both;
  }

  /* Role Two Animations */
  .role.two>span:nth-child(1) {
    animation: hideLetter 0.2s 1 8.2s both;
  }

  .role.two>span:nth-child(2) {
    animation: hideLetter 0.2s 1 8s both;
  }

  .role.two>span:nth-child(3) {
    animation: hideLetter 0.2s 1 7.8s both;
  }

  .role.two>span:nth-child(4) {
    animation: hideLetter 0.2s 1 7.6s both;
  }

  .role.two>span:nth-child(5) {
    animation: hideLetter 0.2s 1 7.4s both;
  }

  .role.two>span:nth-child(6) {
    animation: hideLetter 0.2s 1 7.2s both;
  }

  .role.two>span:nth-child(7) {
    animation: hideLetter 0.2s 1 7s both;
  }

  .role.two>span:nth-child(8) {
    animation: hideLetter 0.2s 1 6.8s both;
  }

  .role.two>span:nth-child(9) {
    animation: hideLetter 0.2s 1 6.6s both;
  }

  @keyframes hideLetter {
    0% {
      opacity: 0;
    }

    100% {
      opacity: 1;
    }
  }

  .role.two {
    padding-left: 1em;
    line-height: 1;
    color: blue;
  }

  .role {
    font-family: FightingSpirit;
    font-style: italic;
    letter-spacing: 0.1em;
    color: blue;

    display: grid;
    grid-auto-flow: column;
  }

  .role.one>span {
    color: var(--bg-color-sub);
  }
</style>