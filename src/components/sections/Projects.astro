---
import { projectInformation } from "../../utils";
import ProjectPreview from "../Projects/ProjectPreview.astro";
import clockedOutVideo from "../../../public/clocked-out.mp4";
import meemoBoutiqueVideo from "../../../public/meemo.mp4";
import myWeatherVideo from "../../../public/my-weather.mp4";

export interface IProjectsProps {
  filler: string;
}
const [clockedOut] = projectInformation;
const projectVideos = [clockedOutVideo, myWeatherVideo, meemoBoutiqueVideo,];
---

<section id="projects-section" class="section-container section-projects">
  <div class="projects projects-container">
    <h2 class="projects projects-header">
      Projects.
    </h2>
    <div class="projects my-projects-container">
      {projectInformation.map((info, index) => {
      return (
      <ProjectPreview videoSrc={projectVideos[index]} projectLink={info.projectLink}
        projectDescription={info.description} projectTitle={info.title} projectClass={info.alternate}
        lastClass={info.lastClass} />)
      })}

    </div>
  </div>
</section>
<script is:inline>
  const projectContainer = document.querySelector('.projects-container');
  const videos = [...document.querySelectorAll('.project-video')];
  const textContainers = [...document.querySelectorAll('.project-preview-text-container')];
  const videoContainers = [...document.querySelectorAll('.project-preview-video-container')];
  const [firstProjectText, secondProjectText, thirdProjectText] = textContainers;

  const screen = window.matchMedia("(min-width: 1050px)");
  let oldScroll = window.scrollY;
  let direction;
  let firstTransform = 40;
  let secondTransform = 40;
  let thirdTransform = 50;
  const originalTransform = 40;
  const lowestTransform = -20;



  videos.forEach((video, i) => {
    video.addEventListener('mouseover', function (e) {
      textContainers[i].classList.add('decrease-opacity');
      videoContainers[i].classList.add('increase-opacity');
      this.play();
    });
    video.addEventListener('mouseleave', function (e) {
      textContainers[i].classList.remove('decrease-opacity');
      videoContainers[i].classList.remove('increase-opacity');
      this.pause();
    });
  });


  window.addEventListener('scroll', function () {
    const windowScroll = this.scrollY;
    const projectTop = projectContainer.offsetTop;
    const projectBottom = projectContainer.offsetTop + projectContainer.offsetHeight;

    // projectContainer top to bottom divided into a third.
    const projectThird = (projectBottom - projectTop) / 3;

    // Consists of the area occupied by each of the three projects:
    const firstProjectArea = projectTop + projectThird;
    const secondProjectArea = projectTop + (projectThird * 2);
    const thirdProjectArea = projectTop + (projectThird * 3);


    // Logic for determining the scroll's direction.
    if (windowScroll > oldScroll) {
      direction = "down";
    } else {
      direction = "up";
    }
    oldScroll = windowScroll <= 0 ? 0 : windowScroll;

    if (windowScroll > projectTop && windowScroll < projectBottom && screen.matches) {

      // Third
      if (windowScroll > firstProjectArea && windowScroll * 1.25 > thirdProjectArea) {
        thirdProjectText.style.transform = `translate3d(0px, ${thirdTransform}%, 0px)`;
        if (direction === "down" && thirdTransform <= originalTransform + 10) {
          if (thirdTransform === lowestTransform + 50) {
            return;
          }
          thirdTransform -= 1;
        }
        if (direction === "up" && thirdTransform >= -originalTransform + 10) {
          if (thirdTransform === originalTransform + 10) {
            return;
          }
          thirdTransform += 1;
        }
      }

      // First
      if (windowScroll < firstProjectArea) {
        firstProjectText.style.transform = `translate3d(0px, ${firstTransform}%, 0px)`;
        if (direction === "down" && firstTransform <= originalTransform) {
          if (firstTransform === lowestTransform + 20) {
            return;
          }
          firstTransform -= 1;
        }
        if (direction === "up" && firstTransform >= -originalTransform) {
          if (firstTransform === originalTransform) {
            return;
          }
          firstTransform += 1;
        }
        // return;
      }

      // Second
      if (windowScroll < secondProjectArea * 1.1) {

        secondProjectText.style.transform = `translate3d(0px, ${secondTransform}%, 0px)`;
        if (direction === "down" && secondTransform <= originalTransform) {
          if (secondTransform === lowestTransform) {
            return;
          }
          secondTransform -= 1;
        }
        if (direction === "up" && secondTransform >= -originalTransform) {
          if (secondTransform === originalTransform) {
            return;
          }
          secondTransform += 1;
        }
        // return;
      }
    }


  });
</script>
<style>
  #projects-section {
    scroll-behavior: smooth;
  }

  .projects-header {
    font-size: calc(var(--font-size-xl) - 1em);
  }
</style>